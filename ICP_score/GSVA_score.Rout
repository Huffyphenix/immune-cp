
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

Jrocker>############################
Jrocker># GSVA score
Jrocker>############################
Jrocker>library(GSVA)
Jrocker>library(magrittr)
Jrocker>library(ggplot2)
Jrocker>library(survival)
Jrocker>
Jrocker># data path ---------------------------------------------------------------
Jrocker>basic_path <- file.path("/home/huff/project")
Jrocker>immune_res_path <- file.path(basic_path,"immune_checkpoint/result_20171025")
Jrocker>TCGA_path <- file.path("/data/TCGA/TCGA_data")
Jrocker>gene_list_path <- file.path(basic_path,"immune_checkpoint/checkpoint/20171021_checkpoint")
Jrocker>res_path <- file.path(immune_res_path,"ICP_score")
Jrocker>
Jrocker># load data ---------------------------------------------------------------
Jrocker>exp_data <- readr::read_rds(file.path(TCGA_path,"pancan33_expr.rds.gz"))
Jrocker>gene_list <- read.table(file.path(gene_list_path, "gene_list_type"),header = T)
Jrocker>gene_list$symbol <- as.character(gene_list$symbol)
Jrocker>survival_data <- readr::read_rds(file.path("/home/huff/project/data/TCGA-survival-time/cell.2018.survival","TCGA_pancan_cancer_cell_survival_time.rds.gz")) %>%
+   dplyr::rename("cancer_types" = "type")
Jrocker>
Jrocker>source("/home/huff/project/github/immune-cp/subtype_analysis/funtions_to_draw_pic.R")
Jrocker>
Jrocker># calculation of GSVA score -----------------------------------------------
Jrocker>
Jrocker>fn_GSVA <- function(cancer_types, exp){
+   print(paste("GSVA",cancer_types))
+   genelist <- list(ICPs = gene_list$GeneID)
+   exp <- as.matrix(exp)
+   rownames.exp <- exp[,2]
+   exp <- exp[,-c(1:2)]
+   exp <- apply(exp, 2, as.numeric)
+   rownames(exp) <- rownames.exp
+   res.gsva <- gsva(exp,genelist, mx.diff = FALSE, 
+                    method = c("gsva"),
+                    kcdf = c("Gaussian"), 
+                    verbose = FALSE, parallel.sz = 1)
+   res.gsva %>%
+     as.data.frame() %>%
+     dplyr::as.tbl() %>%
+     tidyr::gather(key = "barcode",value = "GSVA_score") -> gsva.score
+   
+   # fn_compare_TN(gsva.score, cancer_types, result_path = file.path(res_path,"TN_compare"))
+   
+   # fn_survival.calculate(gsva.score, cancer_types)
+   gsva.score
+ }
Jrocker>
Jrocker>fn_compare_TN <- function(gsva.score, cancer_types, result_path){
+   print(paste("Compare TN",cancer_types))
+   gsva.score %>%
+     dplyr::mutate(group = ifelse(substr(barcode,14,15) == "01","Tumor","Not_primary")) %>%
+     dplyr::mutate(group = ifelse(substr(barcode,14,15) == "11","Normal",group)) %>%
+     dplyr::filter(group != "Not_primary") -> gsva.score.TN
+   color_paired <- tibble::tibble(group = c("Normal", "Tumor"),
+                           color = c("#00B2EE", "#CD2626")) %>%
+     dplyr::inner_join(gsva.score.TN, by = "group") %>%
+     dplyr::group_by(group) %>%
+     dplyr::mutate(n = n(), y = min(GSVA_score) - 0.05) %>%
+     dplyr::select(-barcode,-GSVA_score) %>%
+     unique()
+     
+   comp_list <- list(c("Tumor", "Normal"))
+   if (nrow(color_paired) == 2) {
+     gsva.score.TN %>%
+       ggpubr::ggboxplot(x = "group", y = "GSVA_score", fill = "white",alpha = 0,width = 0.1,
+                         color = "group" #add = "jitter",#, palette = "npg"
+       ) +
+       geom_violin(aes(fill = group),alpha = 0.5) +
+       # geom_jitter(aes(color = group),alpha = 0.2,width = 0.1,size=0.1) +
+       geom_boxplot(fill = "white",alpha = 0,width = 0.1) +
+       geom_text(aes(x = group,y = y,label = paste("n=",n)), data = color_paired) +
+       scale_color_manual(
+         values = color_paired$color
+       ) +
+       scale_fill_manual(
+         values = color_paired$color
+       ) +
+       # ylim(4,12) +
+       labs(y = "GSVA score", title  = cancer_types) +
+       theme(legend.position = "none",
+             axis.title = element_text(colour = "black"),
+             axis.title.x = element_blank(),
+             strip.background = element_rect(fill = "white",colour = "white"),
+             text = element_text(size = 8, colour = "black")) +
+       # ggpubr::stat_compare_means(method = "t.test") +
+       ggpubr::stat_compare_means(comparisons = comp_list,method = "t.test",label = "p.signif")
+     fig_name <- paste(cancer_types,"GSVA_score-T_N")
+     ggsave(filename = paste(fig_name,"png",sep = "."), path = result_path,device = "png",width = 4,height = 3)
+     ggsave(filename = paste(fig_name,"pdf",sep = "."), path = result_path,device = "pdf",width = 4,height = 3)
+   }
+ }
Jrocker>
Jrocker>fn_survival.calculate <- function(gsva.score, cancer_types){
+   print(paste("Survival",cancer_types))
+   if (cancer_types == "LAML") {
+     gsva.score %>%
+       dplyr::filter(substr(barcode,14,15) == "03") %>%
+       dplyr::mutate(barcode =  substr(barcode,1,12)) -> gsva.score.T
+   } else{
+     gsva.score %>%
+       dplyr::filter(substr(barcode,14,15) == "01") %>%
+       dplyr::mutate(barcode =  substr(barcode,1,12)) -> gsva.score.T
+   }
+   
+   ct <- cancer_types
+   survival_data %>%
+     dplyr::filter(cancer_types == ct) %>%
+     tidyr::unnest() %>%
+     dplyr::select(bcr_patient_barcode, PFI.1, PFI.time.1) %>%
+     dplyr::rename("barcode" = "bcr_patient_barcode","status" = "PFI.1","time" = "PFI.time.1") %>%
+     dplyr::mutate(time = time/365) %>%
+     dplyr::inner_join(gsva.score.T, by = "barcode") %>%
+     dplyr::mutate(group = ifelse(GSVA_score > quantile(GSVA_score,0.5), "High", "Low")) %>%
+     dplyr::filter(!is.na(time)) -> .survival
+     # dplyr::filter(time <= 1825) %>%
+     # 
+   
+   # do survival diff analysis, get pvalue 
+   if (length(unique(.survival$group)) == 2) {
+     fit <- survfit(survival::Surv(time, status) ~ group, data = .survival, na.action = na.exclude)
+     diff <- survdiff(survival::Surv(time, status) ~ group, data = .survival, na.action = na.exclude)
+     kmp <- 1 - pchisq(diff$chisq, df = length(levels(as.factor(.survival$group))) - 1)
+     
+     if (kmp <= 0.05) {
+       title <- paste(cancer_types)
+       color_list <- tibble::tibble(group = c("Low", "High"),
+                                    color = c("#00B2EE", "#CD2626"))
+       sur_name <- paste(cancer_types, "GSVA_middle-survival", sep = "_")
+       result_path <- file.path(res_path,"survival")
+       fn_survival(.survival,title,color_list,"group",sur_name,xlab = "Time (years)",result_path,3,4,lx = 0.8,ly = 0.8)
+     }
+   }
+ }
Jrocker>
Jrocker>exp_data %>%
+   # head(1) %>%
+   dplyr::mutate(GSVA = purrr::map2(cancer_types, expr, fn_GSVA)) %>%
+   dplyr::select(-expr) -> GSVA.score
[1] "GSVA PCPG"
[1] "GSVA THCA"
[1] "GSVA KIRP"
[1] "GSVA BLCA"
[1] "GSVA PAAD"
[1] "GSVA LIHC"
[1] "GSVA HNSC"
[1] "GSVA BRCA"
[1] "GSVA GBM"
[1] "GSVA LUAD"
[1] "GSVA UCS"
[1] "GSVA ACC"
[1] "GSVA CESC"
[1] "GSVA UVM"
[1] "GSVA PRAD"
[1] "GSVA ESCA"
[1] "GSVA THYM"
[1] "GSVA SKCM"
[1] "GSVA KICH"
[1] "GSVA LUSC"
[1] "GSVA SARC"
[1] "GSVA KIRC"
[1] "GSVA OV"
[1] "GSVA UCEC"
[1] "GSVA LGG"
[1] "GSVA MESO"
[1] "GSVA CHOL"
[1] "GSVA STAD"
[1] "GSVA COAD"
[1] "GSVA LAML"
[1] "GSVA TGCT"
[1] "GSVA DLBC"
[1] "GSVA READ"
There were 50 or more warnings (use warnings() to see the first 50)
Jrocker>
Jrocker>GSVA.score %>%
+   readr::write_rds(file.path(res_path, "ICP_GSVA_score.rds.gz"), compress = "gz")
Jrocker>
> proc.time()
   user  system elapsed 
   3840     234    4617 
